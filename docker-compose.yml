version: '3.8'

services:
  # Redis - 实时数据缓存
  redis:
    image: redis:7-alpine
    container_name: quant_redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    command: redis-server --appendonly yes --maxmemory 8gb --maxmemory-policy allkeys-lru
    restart: unless-stopped

  # ClickHouse - 历史数据存储
  clickhouse:
    image: clickhouse/clickhouse-server:latest
    container_name: quant_clickhouse
    ports:
      - "8123:8123"
      - "9000:9000"
    volumes:
      - clickhouse_data:/var/lib/clickhouse
      - ./config/clickhouse:/etc/clickhouse-server/config.d
    environment:
      CLICKHOUSE_DB: quant_data
      CLICKHOUSE_USER: quant_user
      CLICKHOUSE_PASSWORD: quant_password
    restart: unless-stopped

  # PostgreSQL - 系统配置和用户数据
  postgres:
    image: postgres:15-alpine
    container_name: quant_postgres
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    environment:
      POSTGRES_DB: quant_system
      POSTGRES_USER: quant_user
      POSTGRES_PASSWORD: quant_password
    restart: unless-stopped

  # Kafka - 消息队列
  zookeeper:
    image: confluentinc/cp-zookeeper:latest
    container_name: quant_zookeeper
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    restart: unless-stopped

  kafka:
    image: confluentinc/cp-kafka:latest
    container_name: quant_kafka
    depends_on:
      - zookeeper
    ports:
      - "9092:9092"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://localhost:9092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: true
    restart: unless-stopped

  # AI量化交易系统主服务
  quant_system:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: quant_main
    ports:
      - "8000:8000"  # FastAPI服务
      - "3000:3000"  # Web界面
    volumes:
      - ./src:/app/src
      - ./config:/app/config
      - ./logs:/app/logs
      - ./models:/app/models
      - ./data:/app/data
    environment:
      - REDIS_URL=redis://redis:6379
      - CLICKHOUSE_URL=clickhouse://quant_user:quant_password@clickhouse:9000/quant_data
      - POSTGRES_URL=postgresql://quant_user:quant_password@postgres:5432/quant_system
      - KAFKA_BOOTSTRAP_SERVERS=kafka:9092
      - CUDA_VISIBLE_DEVICES=0
      - PYTHONPATH=/app
    depends_on:
      - redis
      - clickhouse
      - postgres
      - kafka
    restart: unless-stopped
    deploy:
      resources:
        reservations:
          devices:
            - driver: nvidia
              count: 1
              capabilities: [gpu]

  # Prometheus - 系统监控
  prometheus:
    image: prom/prometheus:latest
    container_name: quant_prometheus
    ports:
      - "9090:9090"
    volumes:
      - ./config/prometheus.yml:/etc/prometheus/prometheus.yml
      - prometheus_data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
    restart: unless-stopped

  # Grafana - 数据可视化
  grafana:
    image: grafana/grafana:latest
    container_name: quant_grafana
    ports:
      - "3001:3000"
    volumes:
      - grafana_data:/var/lib/grafana
      - ./config/grafana:/etc/grafana/provisioning
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=admin123
    restart: unless-stopped

volumes:
  redis_data:
  clickhouse_data:
  postgres_data:
  prometheus_data:
  grafana_data:

networks:
  default:
    name: quant_network
